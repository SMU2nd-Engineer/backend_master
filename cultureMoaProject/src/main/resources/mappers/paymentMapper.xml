<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="paymentMapper">
    <!-- 결제 기록 DB 저장 -->
    <insert id="insertPaymentHistory" parameterType="com.culturemoa.cultureMoaProject.payment.entity.PaymentHistory" useGeneratedKeys="true" keyProperty="idx">
        insert into PAYMENT_HISTORY_TBL
        (TID, AMOUNT, PAY_METHOD, BUYER_IDX, SELLER_IDX, PRODUCT_IDX, TRADE_TYPE, DELIVERY_ADDRESS)
        values
        (#{tid}, #{amount}, #{payMethod}, #{buyerIdx}, #{sellerIdx}, #{productIdx}, #{tradeType}, #{deliveryAddress})
    </insert>
    <!-- 결제 상태(created_at) DB저장 -->
    <insert id="insertPaymentStatus" parameterType="com.culturemoa.cultureMoaProject.payment.entity.PaymentStatus" useGeneratedKeys="true" keyProperty="idx">
        insert into PAYMENT_STATUS_TBL
        (TID, CREATED_AT, APPROVED_AT, CANCELED_AT, FAILED_AT)
        values
        (#{tid}, #{createdAt}, #{approvedAt}, #{canceledAt}, #{failedAt})
    </insert>
    <!-- tid로 결제 취소 금액 조회 -->
    <select id="selectAmountByTid" parameterType="string" resultType="int">
        select AMOUNT from PAYMENT_HISTORY_TBL where TID = #{tid}
    </select>
    <!--  tid를 통해 결제 상태 없데이트  -->
    <update id="updatePaymentStatusInfo" parameterType="com.culturemoa.cultureMoaProject.payment.entity.PaymentStatus" >
        update PAYMENT_STATUS_TBL
        <set>
            APPROVED_AT=#{approvedAt}, CANCELED_AT=#{canceledAt}, FAILED_AT=#{failedAt}
        </set>
        where TID = #{tid}
    </update>
    <!-- tid로 product_idx 조회 -->
    <select id="getProductIdxByTid" parameterType="string" resultType="int">
        SELECT PRODUCT_IDX FROM PAYMENT_HISTORY_TBL WHERE TID = #{tid}
    </select>
    <!-- 결제 완료되면 USER_TRANSACTION_TBL에 거래내역 insert -->
    <insert id="insertUserTransaction" parameterType="com.culturemoa.cultureMoaProject.user.dto.UserTransactionDTO" useGeneratedKeys="true" keyProperty="idx">
        insert into USER_TRANSACTION_TBL
        (USER_IDX, PRODUCT_IDX, SDATE)
        values
        (#{userIdx}, #{productIdx}, #{sdate})
    </insert>
    <!-- 거래내역 존재 여부 확인 -->
    <select id="countUserTransactionByProductIdx" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM USER_TRANSACTION_TBL
        WHERE PRODUCT_IDX = #{productIdx}
    </select>

</mapper>