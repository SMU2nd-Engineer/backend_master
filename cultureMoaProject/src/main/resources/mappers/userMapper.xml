<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="userMapper">

    <!--  회원 가입 DB 저장  -->
    <insert id="insertUser" parameterType="com.culturemoa.cultureMoaProject.user.dto.UserDTO">
        insert into USER_TBL
        ( ID, NAME, EMAIL, PASSWORD, ADDRESS, NICKNAME, SOCIAL_LOGIN, SDATE)
        values
        (#{id}, #{name}, #{email}, #{password}, #{address}, #{nickName}, #{socialLogin}, #{sDate})
    </insert>

    <!--    유저 id를 이용하여 아이디 패스워드 가져오기    -->
    <select id="findPasswordByLoginId" parameterType="com.culturemoa.cultureMoaProject.user.dto.UserLoginDTO" resultType="com.culturemoa.cultureMoaProject.user.dto.UserLoginDTO">
        select ID, PASSWORD from USER_TBL where ID = #{id} and WDATE is null
    </select>

    <!--  아이디 찾기 조회에 사용할 쿼리  -->
    <select id="socialFindByLoginId" parameterType="String" resultType="com.culturemoa.cultureMoaProject.user.dto.SocialLoginResponseDTO" >
        select ID from USER_TBL where ID = #{id} and WDATE is null
    </select>

    <!--  아이디/ 닉네임 중복 체크  -->
    <select id="duplicateIdCheck" parameterType="String" resultType="int">
        select count(*) from USER_TBL where ${columnName} = #{pCheckList} and WDATE is null
    </select>
    
    <!--  아이디 찾기  -->
    <select id="findId" parameterType="com.culturemoa.cultureMoaProject.user.dto.UserFindIdRequestDTO" resultType="com.culturemoa.cultureMoaProject.user.dto.UserFindIdResponseDTO" >
        select id from USER_TBL where name=#{name} and email=#{email} and WDATE is null
    </select>

    <!--  비밀번호 변경  -->
    <update id="changePassword" parameterType="com.culturemoa.cultureMoaProject.user.dto.UserChangePasswordRequestDTO" >
        update USER_TBL
        set PASSWORD=#{password}, EDATE=#{eDate}
        where id=#{id} and WDATE is null
    </update>

    <!--    유저 이름과, 이메일, id를 이용해서 정보를 조회    -->
    <select id="passwordFindMatch" parameterType="String" resultType="com.culturemoa.cultureMoaProject.user.dto.UserFindPasswordResponseDTO">
        select PASSWORD from USER_TBL where ID = #{id} and NAME=#{name} and EMAIL=#{email} and WDATE is null
    </select>

    <!--  회원 탈퇴 클릭시 id로 조회하여 wDate 업데이트  -->
    <update id="updateWithdrawal" parameterType="com.culturemoa.cultureMoaProject.user.dto.UserWithdrawalDTO" >
        update USER_TBL
        set WDATE = #{wDate}, EDATE = #{eDate}
        where ID = #{id} and WDATE is null
    </update>
</mapper>
