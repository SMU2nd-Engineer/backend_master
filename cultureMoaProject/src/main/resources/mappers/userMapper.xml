<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="userMapper">

    <!--  회원 가입 DB 저장  -->
    <insert id="insertUser" parameterType="com.culturemoa.cultureMoaProject.user.dto.UserDTO">
        INSERT INTO USER_TBL
        ( ID, NAME, EMAIL, PASSWORD, ADDRESS, NICKNAME, SOCIAL_LOGIN, SDATE)
        VALUES
        (#{id}, #{name}, #{email}, #{password}, #{address}, #{nickName}, #{socialLogin}, #{sDate})
    </insert>

    <!--    유저 id를 이용하여 아이디 패스워드 가져오기    -->
    <select id="findPasswordByLoginId" parameterType="com.culturemoa.cultureMoaProject.user.dto.UserLoginDTO" resultType="com.culturemoa.cultureMoaProject.user.dto.UserLoginDTO">
        SELECT ID, PASSWORD FROM USER_TBL WHERE ID = #{id} AND EDATE IS NULL
    </select>

    <!--  소셜 로그인 아이디 찾기 조회에 사용할 쿼리  -->
    <select id="socialFindByLoginId" parameterType="String" resultType="com.culturemoa.cultureMoaProject.user.dto.SocialLoginResponseDTO" >
        SELECT ID FROM USER_TBL WHERE ID = #{id} AND EDATE IS NULL
    </select>

    <!--  아이디/ 닉네임 중복 체크  -->
    <select id="duplicateIdCheck" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM USER_TBL WHERE ${columnName} = #{pCheckList} AND EDATE IS NULL
    </select>

    <!--  아이디 찾기  -->
    <select id="findId" parameterType="com.culturemoa.cultureMoaProject.user.dto.UserFindIdRequestDTO" resultType="com.culturemoa.cultureMoaProject.user.dto.UserFindIdResponseDTO" >
        SELECT ID, SOCIAL_LOGIN AS socialLogin FROM USER_TBL WHERE NAME=#{name} AND EMAIL=#{email} AND EDATE IS NULL
    </select>

    <!--  비밀번호 변경  -->
    <update id="changePassword" parameterType="com.culturemoa.cultureMoaProject.user.dto.UserChangePasswordRequestDTO" >
        UPDATE USER_TBL
        SET PASSWORD=#{password}, CDATE=#{cDate}
        WHERE id=#{id} AND EDATE IS NULL
    </update>

    <!--    유저 이름과, 이메일, id를 이용해서 정보를 조회    -->
    <select id="passwordFindMatch" parameterType="String" resultType="com.culturemoa.cultureMoaProject.user.dto.UserFindPasswordResponseDTO">
        SELECT PASSWORD FROM USER_TBL WHERE ID = #{id} AND NAME=#{name} AND EMAIL=#{email} AND EDATE IS NULL
    </select>

    <!--  회원 탈퇴 클릭시 id로 조회하여 EDATE 업데이트  -->
    <update id="updateWithdrawal" parameterType="com.culturemoa.cultureMoaProject.user.dto.UserWithdrawalDTO" >
        UPDATE USER_TBL
        SET ID = #{deleteId}, CDATE = #{cDate}, EDATE = #{eDate}
        WHERE ID = #{id} AND EDATE IS NULL
    </update>


    <!--  회원가입에서 선호도 선택할 경우 값 넣기  -->
    <insert id="insertFavoriteNoChoose" parameterType="com.culturemoa.cultureMoaProject.user.dto.UserRegisterFavoriteDTO" >
        INSERT INTO USER_FAVORITE_TBL
        ( USER_IDX )
        VALUES
        ( #{userIdx})
    </insert>

    <!--  유저 아이디로 유저 idx 추출, 마이페이지에서도 사용함-->
    <select id="getUserIdx" parameterType="String" resultType="int" >
        SELECT IDX FROM USER_TBL WHERE ID = #{userId} AND EDATE IS NULL
    </select>

<!--  홈페이지에 사용할 매퍼- 8개의 최신 상품 정보 가져오기  -->
    <select id="getAllProduct" parameterType="int" resultType="com.culturemoa.cultureMoaProject.product.dto.ProductDTO" >
        SELECT MAIN.IDX, CATEGORY_IDX, CATEGORYGENRE_IDX, TITLE, MAIN.SDATE, MAIN.EDATE,
        MAIN.USER_IDX, PRICE, MAIN.FLAG, IMAGE_URL, CONTENT, DETAIL.FLAG, USER.NICKNAME,
        (PICK.IDX IS NOT NULL) AS PICK
        FROM PRODUCT_TBL MAIN
        LEFT JOIN (
        SELECT s1.*
        FROM PRODUCT_IMAGE_TBL s1
        INNER JOIN (
        SELECT product_idx, MIN(idx) AS min_idx
        FROM PRODUCT_IMAGE_TBL
        GROUP BY product_idx
        ) s2 ON s1.product_idx = s2.product_idx AND s1.idx = s2.min_idx
        ) DETAIL
        ON MAIN.IDX = DETAIL.PRODUCT_IDX
        LEFT JOIN USER_TBL AS USER ON MAIN.USER_IDX = USER.IDX
        LEFT JOIN (
        SELECT *
        FROM USER_PICK_TBL AS PTEMP
        WHERE PTEMP.USER_IDX = #{userIdx} AND PTEMP.EDATE IS NULL
        ) AS PICK ON PICK.PRODUCT_IDX = MAIN.IDX
        WHERE MAIN.EDATE IS NULL
        ORDER BY MAIN.SDATE DESC, MAIN.IDX DESC
        LIMIT 8
    </select>

<!--  홈페이지에 사용할 매퍼 - 10개의 최신 게시글 가져오기  -->
    <select id="getContentInfo" resultType="com.culturemoa.cultureMoaProject.board.dto.ContentInfoDTO">
        SELECT CONT.IDX, CONT.USER_IDX, CONT.CATEGORY_IDX, CONT.TITLE,
        CONT.CONTENT, CONT.SDATE,
        USERT.NICKNAME
        FROM CONTENTS_TBL CONT
        LEFT OUTER JOIN USER_TBL USERT ON CONT.USER_IDX = USERT.IDX
        WHERE CONT.EDATE IS NULL
        ORDER BY CONT.SDATE DESC, CONT.IDX DESC
        LIMIT 10
    </select>

<!--  로그인 후 홈페이지에서 전역 변수에 저장할 필요한 유저정보 골라내기   -->
    <select id="getLoginUserInfo" parameterType="String" resultType="com.culturemoa.cultureMoaProject.user.dto.LoginUserInfoDTO" >
        SELECT IDX AS userIdx, ID AS userId, NAME AS userName , NICKNAME as userNickName
        FROM USER_TBL
        WHERE ID = #{userId} AND EDATE IS NULL;
    </select>
</mapper>
