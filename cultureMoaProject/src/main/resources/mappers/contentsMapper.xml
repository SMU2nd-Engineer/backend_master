<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="contentsMapper">

<!--     Contents 조회 -->
<!--    <select id="getAllContents" resultType="com.culturemoa.cultureMoaProject.board.dto.ContentsDTO" >-->
<!--        SELECT CONT.IDX, CONT.USER_IDX, CONT.CATEGORY_IDX, CONT.TITLE, CONT.DIVISION,-->
<!--               CONT.CONTENT, CONT.SDATE-->
<!--        FROM CONTENTS_TBL CONT-->
<!--        LEFT OUTER JOIN USER_TBL USERT ON-->
<!--             CONT.USER_IDX = USERT.IDX-->
<!--    </select>-->

    <!-- CONTENTS_TBL의 content와 USER_TBL의 유저 정보 조인
    edate는 끝 날짜라 값이 있으면 안됨 그래서 null이어야 함 -->
    <select id="getContentInfos" resultType="com.culturemoa.cultureMoaProject.board.dto.ContentInfoDTO" >
        SELECT CONT.IDX, CONT.USER_IDX, CONT.CATEGORY_IDX, CONT.TITLE,
        CONT.CONTENT, CONT.SDATE,
        USERT.NICKNAME
        FROM CONTENTS_TBL CONT
        LEFT OUTER JOIN USER_TBL USERT ON
        CONT.USER_IDX = USERT.IDX
        WHERE CONT.EDATE IS NULL
    </select>

    <!-- JOIN된 CONTENTS_TBL과 USER_TBL의 검색어 조회 - search -->
    <select id="getContentSearchs" parameterType="java.util.HashMap" resultType="com.culturemoa.cultureMoaProject.board.dto.ContentInfoDTO" >
        SELECT CONT.IDX, CONT.USER_IDX, CONT.CATEGORY_IDX, CONT.TITLE,
        CONT.CONTENT, CONT.SDATE,
        USERT.NICKNAME
        FROM CONTENTS_TBL CONT
        LEFT OUTER JOIN USER_TBL USERT ON
        CONT.USER_IDX = USERT.IDX

        <where>
            <!-- edate: 종료일/삭제일로 삭제되지 않았거나, 아직 유효한 게시글만 보여주는 필터 조건이고,
                DB에서 삭제하지 않고 EDATE에 날짜만 남기는 방식임 -->
            CONT.EDATE IS NULL

            <!-- searchType: 제목+내용/작성자(nickname) 의 구분값
            contents 테이블의 제목(title)+내용(contents) 선택 한 후 키워드로 검색 -->
            <if test="searchType == 0">
                AND (
                    CONT.TITLE LIKE '%${keyword}%'
                    OR CONT.CONTENT LIKE '%${keyword}%'
                )

            </if>

            <!-- USER_tbl의 nickname을 선택한 후 키워드로 검색 -->
            <if test="searchType == 1">
                AND USERT.NICKNAME LIKE '%${keyword}%'
            </if>

            <!-- '팝니다', '삽니다' 선택한 필터 category_idx(일단 숫자로 해놓고 나중에 바꿔야함 프론트엔드에서도) -->
<!--            <if test="category_idx != category_idx and category_idx != ''">-->
            <if test="category_idx != null">
                <!-- Contents_tbl의 category_idx -->
                AND CONT.CATEGORY_IDX = #{category_idx}
            </if>
            <!-- 키워드로 검색어 입력했을때 제목(title), 내용(content) 조회 -->

            <!-- 1. 키워드로 검색어 입력했을때, 2. 눈에 안보이는 것: content(내용) 까지 검색(보류)
            3. 제목+내용 구분자 선택시 제목(title), 내용(content) 조회 -->

            <if test="keyword != null">
              AND (
                    CONT.TITLE LIKE '%${keyword}%'
                    OR CONT.CONTENT LIKE '%${keyword}%'
                )
            </if>

        </where>

    </select>

    <!-- CONTENTS_TBL, USER_TBL의 게시글 등록(카테고리(팝니다/삽니다), 제목, 글 내용, 오늘날짜) insert -->
    <insert id="getContentInsert" useGeneratedKeys="true"
            parameterType="com.culturemoa.cultureMoaProject.board.dto.ContentsDTO"
            keyProperty="idx" >
        INSERT INTO CONTENTS_TBL (USER_IDX, CATEGORY_IDX, TITLE, CONTENT, SDATE)
        VALUES( #{user_idx}, #{category_idx}, #{title}, #{content}, #{sdate});

    </insert>

    <!-- 게시글 이미지 등록 (게시글 고유 번호, 이미지 주소) insert -->
    <insert id="getBoardImageInsert" useGeneratedKeys="true"
            parameterType="com.culturemoa.cultureMoaProject.board.dto.ContentsDetailImageDTO"
            keyProperty="idx" >

        INSERT INTO CONTENTS_DETAIL_IMAGE_TBL (CONTENTS_IDX, IMAGE_URL)
        VALUES( #{contents_idx}, #{image_url});
    </insert>

    <!-- 게시글 이미지 상세 정보 가져오기  -->
    <select id="boardImageRead" resultType="com.culturemoa.cultureMoaProject.board.dto.ContentsDetailImageDTO" parameterType="Long" >
        SELECT CONTENTS_IDX, IMAGE_URL AS image_url
        FROM CONTENTS_DETAIL_IMAGE_TBL
        WHERE CONTENTS_IDX = #{contents_idx}
        ORDER BY IDX
    </select>

    <!-- CONTENTS_TBL, USER_TBL의 게시글 등록 정보 불러오기 - 게시글 상세페이지 -->
    <select id="getParticular" parameterType="Long" resultType="com.culturemoa.cultureMoaProject.board.dto.ContentInfoDTO" >
        SELECT CONT.IDX, CONT.USER_IDX, CONT.CATEGORY_IDX, CONT.TITLE,
        CONT.CONTENT, CONT.SDATE,
        USERT.NICKNAME
        FROM CONTENTS_TBL CONT
        LEFT OUTER JOIN USER_TBL USERT ON
        CONT.USER_IDX = USERT.IDX
        WHERE CONT.EDATE is NULL
        AND   CONT.IDX = #{idx}
    </select>

    <!-- 등록된 게시글 수정(상세페이지 수정버튼) -->
    <update id="updateContents" parameterType="com.culturemoa.cultureMoaProject.board.dto.ContentsDetailModifyInfoDTO">
        UPDATE CONTENTS_TBL
           SET CATEGORY_IDX = #{category_idx},
               TITLE = #{title},
               CONTENT = #{content},
               CDATE = #{cdate},
         WHERE IDX = #{id}
    </update>

    <!-- 등록된 게시글 삭제(상세페이지 삭제버튼) -->
    <update id="deleteContents" parameterType="com.culturemoa.cultureMoaProject.board.dto.ContentsDeleteInfoDTO">
        UPDATE CONTENTS_TBL
        SET EDATE = #{edate}
        WHERE IDX = #{idx}
    </update>

    <!-- CONTENTS_TBL, USER_TBL의 댓글 불러오기 - 게시글 상세페이지
    AS comment_idx: ContentsCommentInfoDTO에 컬럼명이 일치해야되서 선언함
    -->
    <select id="getComment" resultType="com.culturemoa.cultureMoaProject.board.dto.ContentsCommentInfoDTO" >
        SELECT COMNT.CONTENTS_IDX, COMNT.TEXT, COMNT.SDATE,
        USERT.NICKNAME, COMNT.IDX AS comment_idx
        FROM CONTENTS_COMMENT_TBL COMNT
        LEFT OUTER JOIN USER_TBL USERT ON
        COMNT.USER_IDX = USERT.IDX
        WHERE COMNT.CONTENTS_IDX = #{idx}
        AND   COMNT.EDATE IS NULL
    </select>

    <!-- CONTENTS_TBL, USER_TBL의 댓글 등록 - 게시글 상세페이지 -->
    <insert id="getCommentInsert" useGeneratedKeys="true"
            parameterType="com.culturemoa.cultureMoaProject.board.dto.ContentsCommentDTO"
            keyProperty="idx" >
        INSERT INTO CONTENTS_COMMENT_TBL
        (USER_IDX, CONTENTS_IDX, TEXT, SDATE)
        VALUES(#{user_idx}, #{contents_idx}, #{text}, #{sdate});
    </insert>

    <!-- CONTENTS_TBL, USER_TBL의 댓글 삭제 - 게시글 상세페이지 -->
    <update id="getCommentDelete" parameterType="com.culturemoa.cultureMoaProject.board.dto.ContentsCommentDeleteInfoDTO">
        UPDATE CONTENTS_COMMENT_TBL
        SET EDATE = #{edate}
        WHERE IDX = #{idx}
    </update>

</mapper>