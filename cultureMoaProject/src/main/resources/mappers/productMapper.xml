<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="productMapper">
    <resultMap id="getAllProduct" type="hashmap">

    </resultMap>
    <!-- 전체 정보 가져오기 -->
    <select id="getAllProduct" resultType="com.culturemoa.cultureMoaProject.product.dto.ProductDTO" >
        SELECT MAIN.IDX, CATEGORY_IDX, CATEGORYGENRE_IDX, TITLE, SDATE, EDATE,
                USER_IDX, PRICE, MAIN.FLAG, IMAGE_URL, CONTENT, DETAIL.FLAG
        FROM PRODUCT_TBL MAIN
        LEFT JOIN (
                    SELECT s1.*
                    FROM PRODUCT_IMAGE_TBL s1
                    INNER JOIN (
                        SELECT product_idx, MIN(idx) AS min_idx
                        FROM PRODUCT_IMAGE_TBL
                        GROUP BY product_idx
                    ) s2 ON s1.product_idx = s2.product_idx AND s1.idx = s2.min_idx
                ) DETAIL
        ON MAIN.IDX = DETAIL.PRODUCT_IDX
    </select>

    <!-- 해당 idx에 맞는 정보 가져오기 -->
    <select id="getProductByIdx" resultType="com.culturemoa.cultureMoaProject.product.dto.ProductDTO" parameterType="int">
        SELECT MAIN.IDX, CATEGORY_IDX, CATEGORYGENRE_IDX, TITLE, SDATE, EDATE,
               USER_IDX, PRICE, MAIN.FLAG, IMAGE_URL, CONTENT, DETAIL.FLAG
        FROM PRODUCT_TBL MAIN
        LEFT OUTER JOIN PRODUCT_IMAGE_TBL DETAIL ON
                MAIN.IDX = DETAIL.PRODUCT_IDX
        WHERE MAIN.IDX = #{idx}
    </select>

    <!-- 상품 등록 (카테고리 번호, 상품 장르, 상품 이름, 날짜, 아이디, 가격, 상세설명) -->
    <insert id="insertProduct" useGeneratedKeys="true" keyProperty="idx" >
        INSERT INTO  PRODUCT_TBL (
                    CATEGORY_IDX, CATEGORYGENRE_IDX,  TITLE, SDATE, EDATE, USER_IDX, PRICE, FLAG, CONTENT)
               VALUES (
                    #{category_idx}, #{categorygenre_idx}, #{title}, #{sDate}, #{eDate}, #{user_idx}, #{price}, #{flag}, #{content} )
    </insert>

    <!-- 상품 이미지 정보 등록 (상품코드번호, 이미지 주소 ) -->
    <insert id="insertProductDetail" >
        INSERT INTO PRODUCT_IMAGE_TBL ( PRODUCT_IDX, IMAGE_URL, FLAG)
        VALUES (#{product_idx}, #{imageUrl}, #{flag} )
    </insert>

    <!-- 상품 이미지 가져오기 -->
    <select id="imageRead" resultType="com.culturemoa.cultureMoaProject.product.dto.ProductImageDTO" parameterType="int" >
        SELECT PRODUCT_IDX, IMAGE_URL, FLAG
        FROM PRODUCT_IMAGE_TBL
        WHERE PRODUCT_IDX = #{product_idx}
    </select>


    <!-- 상품 검색 (상품이름, 상품장르, 카테고리, 상세설명)-->
    <select id="searchProducts" parameterType="com.culturemoa.cultureMoaProject.product.dto.ProductSearchDTO" resultType="com.culturemoa.cultureMoaProject.product.dto.ProductDTO">
        SELECT MAIN.IDX, CATEGORY_IDX, CATEGORYGENRE_IDX, TITLE, SDATE, EDATE,
                USER_IDX, PRICE, MAIN.FLAG, IMAGE_URL, CONTENT, DETAIL.FLAG
        FROM PRODUCT_TBL MAIN
        LEFT OUTER JOIN PRODUCT_IMAGE_TBL DETAIL ON
                 MAIN.IDX = DETAIL.PRODUCT_IDX
        <where>
            1 = 1
<!--            <if test="searchDTO.getCategory_idx() > 0">-->
<!--                CATEGORY_IDX = #{searchDTO.getCategory_idx()}-->
<!--            </if>-->
<!--            <if test="searchDTO.geCategorygenre_idx() > 0">-->
<!--                CATEGORYGENRE_IDX = #{searchDTO.geCategorygenre_idx()}-->
<!--            </if>-->
<!--            <if test="searchDTO.getKeyword() > 0">-->
<!--                KEYWORD = #{searchDTO.getKeyword()}-->
<!--            </if>-->
            <if test="keyword != null">
                AND (TITLE LIKE '%${keyword}%' OR CONTENT LIKE '%${keyword}%')
            </if>
            <if test="category_idx > 1000">
                AND CATEGORY_IDX = #{category_idx}
            </if>
            <if test="categorygenre_idx > 2000" >
                AND CATEGORYGENRE_IDX = #{categorygenre_idx}
            </if>
        </where>
    </select>
    <!-- 상품 팔렸을 때 flag값 True -->
    <update id="updateProductFlag" parameterType="boolean" >
        update PRODUCT_TBL
        set FLAG = #{flag}
        where IDX = #{productIdx}
    </update>
</mapper>
