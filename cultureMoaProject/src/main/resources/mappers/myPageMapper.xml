<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="myPageMapper">

<!--    유저 id를 이용하여 패스워드 가져오기    -->
    <select id="findPasswordByTokenId" parameterType="String" resultType="com.culturemoa.cultureMoaProject.user.dto.MyPagePasswordCheckDTO">
        select PASSWORD from USER_TBL where ID = #{id} and EDATE is null
    </select>


<!--    유저 id를 이용하여 소셜 정보 가져옴    -->
    <select id="findSocialLoginByTokenId" parameterType="String" resultType="com.culturemoa.cultureMoaProject.user.dto.MyPageCheckSocialDTO" >
    <!--   별칭 지정으로 dto와 맞춤     -->
        select SOCIAL_LOGIN as socialLogin from USER_TBL where ID=#{tokenUserId} and EDATE is null
    </select>

    <!--  유저 id를 이용하여 사용자 정보를 가져옴  -->
    <select id="findUserInfoByTokenId" parameterType="String" resultType="com.culturemoa.cultureMoaProject.user.dto.MyPageGetUserInfoDTO" >
        select NAME, NICKNAME, ADDRESS, EMAIL from USER_TBL where ID=#{tokenUserId} and EDATE is null
    </select>


<!--  유저 아이디를 통해서 마이페이지 갱신된 정보를 업데이트  -->
    <update id="updateUserInfo" parameterType="com.culturemoa.cultureMoaProject.user.dto.MyPageUpdateUserInfoDTO" >
        update USER_TBL
        <set>
            NAME=#{name}, NICKNAME=#{nickName}, EMAIL=#{email}, ADDRESS=#{address}, CDATE =#{cDate},
            <if test="password !='' and password != null">
                password=#{password}
            </if>
        </set>
        where ID = #{id} and EDATE is null
    </update>


<!--  마이페이지 메인에서 사용할 찜 목록 최신 2개만 가져오기  -->
    <select id="getMainPeakListInfo" parameterType="String" resultType="com.culturemoa.cultureMoaProject.user.dto.MyPageProductListDTO">
        select P.IDX, P.TITLE, P.PRICE, P.FLAG, PD.CONTENT, PD.IMAGE_URL as imageUrl
        from USER_PICK_TBL as UP
        join USER_TBL as U on U.IDX = UP.USER_IDX
        join PRODUCT_TBL as P on P.IDX = UP.PRODUCT_IDX
        join PRODUCT_DETAIL_TBL AS PD on PD.PRODUCT_IDX = P.IDX
        where U.ID = #{userId}
        order by UP.SDATE DESC
        limit 2;
    </select>


<!--  마이페이지 메인에서 사용할 구매 내역 최신 4개만 가져오기  -->
    <select id="getMainSellListInfo" parameterType="String" resultType="com.culturemoa.cultureMoaProject.user.dto.MyPageProductListDTO" >
        select P.IDX, P.TITLE, P.PRICE, P.FLAG, PD.CONTENT, PD.IMAGE_URL as imageUrl
        from USER_TRANSACTION_TBL as UT
        join USER_TBL as U on U.IDX = UT.USER_IDX
        join PRODUCT_TBL as P on P.IDX = UT.PRODUCT_IDX
        join PRODUCT_DETAIL_TBL AS PD on PD.PRODUCT_IDX = P.IDX
        where U.ID = #{userId}
        order by UT.SDATE DESC
        limit 4;
    </select>


<!--  마이페이지 메인에서 사용할 거래 내역 5개 가져오기   -->
    <select id="getMainReviewListInfo" parameterType="String" resultType="com.culturemoa.cultureMoaProject.user.dto.ReviewListDTO" >
        select UR.REVIEW, UR.IDX, UR.SDATE
        from USER_REVIEW_TBL as UR
        join USER_TBL as U on U.IDX = UR.USER_IDX
        where U.ID = #{userId}
        order by UR.SDATE DESC
        limit 5;
    </select>


<!--  마이페이지 찜 목록 정보 가져오기  -->
    <select id="getWishListInfo" parameterType="String" resultType="com.culturemoa.cultureMoaProject.user.dto.MyPageProductListDTO">
        select P.IDX, P.TITLE, P.PRICE, P.FLAG, PD.CONTENT, PD.IMAGE_URL as imageUrl
        from USER_PICK_TBL as UP
        join USER_TBL as U on U.IDX = UP.USER_IDX
        join PRODUCT_TBL as P on P.IDX = UP.PRODUCT_IDX
        join PRODUCT_DETAIL_TBL AS PD on PD.PRODUCT_IDX = P.IDX
        where U.ID = #{userId}
        order by UP.SDATE DESC;
    </select>



<!--  마이페이지에 거래 내역 상품 목록을 가져오기  -->
    <select id="getMySellAndByListInfo" parameterType="String" resultType="com.culturemoa.cultureMoaProject.user.dto.MyPageProductListDTO" >
        select P.IDX, P.TITLE, P.PRICE, P.FLAG, PD.CONTENT, PD.IMAGE_URL as imageUrl, UT.CATEGORYSUB_IDX as categorySubIdx
        from USER_TRANSACTION_TBL as UT
        join USER_TBL as U on U.IDX = UT.USER_IDX
        join PRODUCT_TBL as P on P.IDX = UT.PRODUCT_IDX
        join PRODUCT_DETAIL_TBL AS PD on PD.PRODUCT_IDX = P.IDX
        where U.ID = #{userId}
        order by UT.SDATE DESC;
    </select>


<!--  마이페이지 게시판 탭에서 사용자 작성 게시판 정보 가져오기  -->
    <select id="getMyBoardListInfo" parameterType="String" resultType="com.culturemoa.cultureMoaProject.user.dto.MyPageBoardDTO" >
        select C.IDX, C.TITLE, C.DIVISION
        from CONTENTS_TBL as C
        join USER_TBL as U on U.IDX = C.USER_IDX
        where U.ID = #{userId}
        order by C.SDATE DESC;
    </select>


<!--  마이페이지 게시판 탭에서 사용자 작성 댓글 정보 가져오기  -->
    <select id="getMyCommentListInfo" parameterType="String" resultType="com.culturemoa.cultureMoaProject.user.dto.MyPageCommentDTO" >
        select CC.TEXT, CC.IDX, CC.SDATE
        from CONTENTS_COMMENT_TBL as CC
        join USER_TBL as U on U.IDX = CC.USER_IDX
        where U.ID = #{userId}
        order by CC.SDATE DESC;
    </select>


<!--  마이페이지 메인에서 별점에 표시할 리뷰 평균 점수 가져오기  -->
    <select id="getTotalRating" parameterType="String" resultType="com.culturemoa.cultureMoaProject.user.dto.MyPageAverageRatingDTO" >
        select avg(RATING) as myPageTotalRating
        from USER_REVIEW_TBL as UR
        join USER_TBL as U on U.IDX = UR.USER_IDX
        where U.ID = #{userId}
    </select>


<!--  마이페이지 리뷰 탭 사용할 사용자 리뷰 정보 가져오기  -->
    <select id="getMyReviewListInfo" parameterType="String" resultType="com.culturemoa.cultureMoaProject.user.dto.ReviewListDTO" >
        select UR.REVIEW, UR.IDX, UR.SDATE
        from USER_REVIEW_TBL as UR
        join USER_TBL as U on U.IDX = UR.USER_IDX
        where U.ID = #{userId}
        order by UR.SDATE DESC;
    </select>

<!--  마이페이지 리뷰 탭 사용할 사용자 리뷰 거래 평가 정보 가져오기  -->
    <select id="getMyEvaluationInfo" parameterType="int" resultType="com.culturemoa.cultureMoaProject.user.dto.MyPageEvaluationDTO">
        select CS.IDX as categorySubIdx, CS.NAME as evaluationName, COUNT(URE.REVIEW_IDX) as countEvaluation
        from CATEGORYSUB_TBL as CS
        left join USER_REVIEW_EVALUATION_TBL as URE on CS.IDX = URE.CATEGORYSUB_IDX and URE.IS_EVALUATION = 1
        left join USER_REVIEW_TBL as UR on URE.REVIEW_IDX = UR.IDX
        left join USER_TRANSACTION_TBL UT ON UR.TRANSACTION_IDX = UT.IDX AND UT.USER_IDX=#{userIdx}
        where CS.IDX between 5001 and 5005
        group by CS.IDX
        order by CS.IDX
    </select>

<!--  선호도 체크에 사용할 category sub 테이블 조회  -->
    <select id="getCategorySubInfo" resultType="com.culturemoa.cultureMoaProject.user.dto.UserCategorySubDTO">
        select SUB_IDX as subIdx, NAME from CATEGORYSUB_TBL where SUB_IDX &lt; 4000;
    </select>

<!--  유저 선호도 체크 값 불러오기  -->
    <select id="getUserFavorites" parameterType="int" resultType="int">
        select CATEGORYSUB_IDX
        from USER_FAVORITE_TBL
        where USER_IDX = #{userIdx} and IS_FAVORITE = 1
    </select>

<!--  유저 선호도 수정시 더이상 관심사 아닌 것 업데이트 하기  -->
    <update id="updateUserFavorites" parameterType="com.culturemoa.cultureMoaProject.user.dto.MyPageEditFavoriteDTO">
        <if test="notFavorites != null and notFavorites.size() > 0">
            update USER_FAVORITE_TBL
                set IS_FAVORITE = 0, CDATE = #{CDate}
                where USER_IDX = #{userIdx}
                and CATEGORYSUB_IDX in
            <foreach collection="notFavorites" item="notFavorite" open="(" separator="," close=")" >
                 #{notFavorite}
            </foreach>
        </if>
    </update>

<!--  유저 선호도 on duplicate key 사용하여 새로운 관심사인 경우 삽입 및 중복인 경우 update 방식   -->
    <insert id="insertOrUpdateUserFavorites" parameterType="com.culturemoa.cultureMoaProject.user.dto.MyPageEditFavoriteDTO">
            insert into USER_FAVORITE_TBL
            ( USER_IDX, CATEGORYSUB_IDX, SDATE, IS_FAVORITE)
            values
            <foreach collection="insertNewFavorites" item="favorite" separator="," >
                (#{userIdx}, #{favorite}, #{sDate}, 1)
            </foreach>
            on duplicate key
            update
            IS_FAVORITE = 1,
            CDATE = #{cDate}
    </insert>

</mapper>